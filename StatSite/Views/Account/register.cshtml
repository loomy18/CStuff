@model LOLSA.Models.Register

@{
    ViewBag.Title = "register";
}


<asp:content></asp:content>

@using (Html.BeginForm("RegisterUser", "Account"))
{
    <fieldset id="registerForm">
        <div class="container app-container-signin">

            @Html.TextBoxFor(m => m.UserName, new { data_bind = "value: Name:", @class = "form-control app-fill-lightgray app-border-darkgray fieldInput", @placeholder = "Username" })

            @Html.ValidationMessageFor(m => m.UserName, null, new { @class = "ValidationMessage" })

            @Html.TextBoxFor(m => m.SummonerName, new { data_bind = "value: Name:", @class = "form-control app-fill-lightgray app-border-darkgray fieldInput", @placeholder = "Summonername" })

            @Html.ValidationMessageFor(m => m.SummonerName, null, new { @class = "ValidationMessage" })
            
            @Html.DropDownListFor(m => m.Server, new SelectList(
                  new List<Object>{
                       new { value = 0 , text = "na"  },
                       new { value = 1 , text = "euw" },
                    },
                  "value",
                  "text",
                   0), new { data_bind = "value: Name:", @class = "form-control app-fill-lightgray app-border-darkgray fieldInput" })

            @Html.TextBoxFor(m => m.Email, new { data_bind = "value: Name:", @class = "form-control app-fill-lightgray app-border-darkgray fieldInput", @placeholder = "Email" })

            @Html.ValidationMessageFor(m => m.Email, null, new { @class = "ValidationMessage" })

            @Html.PasswordFor(m => m.Password, new { data_bind = "value: Name:", @class = "form-control app-fill-lightgray app-border-darkgray fieldInput", @placeholder = "Password" })

            @Html.ValidationMessageFor(m => m.Password, null, new { @class = "ValidationMessage" })

            @Html.PasswordFor(m => m.ConfirmPassword, new { data_bind = "value: Name:", @class = "form-control app-fill-lightgray app-border-darkgray fieldInput", @placeholder = "Confirm Password" })

            @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "ValidationMessage" })


            @Html.ValidationMessageFor(m => m.UserName)
            <button type="submit" id="LoginButton" class="btn btn-lg btn-primary btn-block">Register</button>

        </div>
    </fieldset>
}

@section scripts {
    <script>
        $(function () {
            var submitButton = $("#submitButton");
            var registerForm = $("#registerForm");

            //  Attach event handler to submit button
            submitButton.click(function () {
                SubmitInfo(registerForm);
            });
        });

        //  Submits the Info form to Controller
        //  formContainer: (jQuery) The form model to submit
        function SubmitInfo(formContainer) {
            var path = "@Url.Action("RegisterUser")";
            var data1 = formContainer.serialize()
            $.ajax({
                url: path,
                type: 'post',
                data: data1,
                success: function (data) {
                    if (data.IsSuccess) {
                        // Clear the input tags
                        formContainer.find("input[type='text']").each(function (i, element) {
                            $(this).val('');
                        });
                    }

                },
                error: function (jqXHR, textStatus, errorThrown) {

                }
            });
        }
    </script>
}
